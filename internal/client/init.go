package client

import (
	"fmt"
	"time"
)

func easeOutCubic(t float64) float64 { return 1 - (1-t)*(1-t)*(1-t) }

func Draw() {
	lines := []string{
		"                                                                                                    ",
		"                                                                                                    ",
		"                                                                                                    ",
		"                                                                                                    ",
		"                                                                                                    ",
		"                                                .                                                   ",
		"                                           ## +#   #                                                ",
		"                                  #    # ##+#####.                                                  ",
		"                                 ###..  +######+##                                                  ",
		"                                       ###########.+                                                ",
		"                                     #################.   +                                         ",
		"                                   ##    # ++   #######     #########.                              ",
		"                           +               .     #### #         .-##  #++##                         ",
		"                           #  .                   ####-     .############ ##+                       ",
		"                         . # # +# ##              ####-     -##########  #######++ ###              ",
		"                        +.#.##+####### +-         ###+ -.###########   ################             ",
		"                        #################         ###  ##########-####.#####+#       .              ",
		"                      ##########     .####      ##### #######+   -- .### ##+##+                     ",
		"                      #.##########+    ####    ##### ######          #..####-   #                   ",
		"                  #+ ##+  -#####       .###  ###### #####+         #    - ###                       ",
		"                  ###    -###   #       ###++####+ #####.           .      .#++                     ",
		"                        .  ##           ### ####- -#####                   ####                     ",
		"                          ####         ####.####  ######  +  # +  #         +                       ",
		"                                      #### -###   ### #   #  +# # +#                  ##+           ",
		"                     #               #### # ###   ### #    ## ##+##+#.              ..##.           ",
		"                  # ##  +          -### +##+####  ####     #### #######     # ##-# ###              ",
		"                 # #####.-        #### ####  ###  ####   ##  .###+####+#    ++#####    ..           ",
		"                 #+######-.      #### ####   ####  ####    -####++#####      #########              ",
		"               -###########     #### -####    ####  ####   ############..    #######.               ",
		"               ########- +##.  .#### #####     ####  ####   #+... #####.    ####-#                  ",
		"            ###-#  .#     ##   ####   ####     ####   #####     ++####.#    #-                      ",
		"               #         .##   ####  +#####     ####   #######  +.+###.+    ##                      ",
		"               +        ###    ####  --####-    ####     ###### ..+ ### #    .###.                  ",
		"                   .####       #####   ######  ####+ #### ###### + # ########.      .####           ",
		"                ###.           .#####   + #####  ## ###### ######        -####          #-          ",
		"              ##  ##            ######  +#########  #####   ##### #        ##.         ##           ",
		"             ##   ##             ###### ############# ##### ##### ##     #.   #########             ",
		"             ##   +##        -+.  ##### ####### .##### ###+ ####. ## .  +   ##                      ",
		"              ##    ############## ##### ###.-### +#### ## -####. ##+##    #                        ",
		"                ##      ++++ .+####-.#### ##.##### #####   ##### .##  +######                       ",
		"                  #                ## ####- ######+ ############  .#############                    ",
		"           #   .  #.                 #+#### ######+ #### ###### ##################                  ",
		"          #.      #                 .###### #####+###-+####### ######  #####+ #####                 ",
		"           #+   ##                  .###### +############### #####  ########## ####                 ",
		"                       ##############  ##### .############ -####. #    #### -# ####                 ",
		"                     #####+     .########   +#  #######  ###### # ##+##    ## #####                 ",
		"                    #### +#########      -+++-.####+######### ### ####  ..  -#####                  ",
		"                    ###         ##   #####################.       ###############                   ",
		"                     #####++#### -#######+      ######               #########                      ",
		"                       .++.   ####                                                                  ",
		"                                                                                                    ",
	}

	fmt.Println("\nüêâ Welcome to the HYDRA chat. üêâ")
	return

	minDelay := 8 * time.Millisecond
	extra := 40 * time.Millisecond
	total := float64(len(lines) - 1)

	for i, line := range lines {
		fmt.Println(line)
		t := float64(i) / total
		delay := minDelay + time.Duration(easeOutCubic(t)*float64(extra))
		time.Sleep(delay)
	}
	
}